----- CREATE USER -----
-- CREATE USER BANCHAN IDENTIFIED BY HI123456;
-- GRANT CONNECT, RESOURCE TO BANCHAN;
-- GRANT CREATE VIEW TO BANCHAN;


----- DROP SEQUENCE -----
DROP SEQUENCE "SEQ_QUESTION";
DROP SEQUENCE "SEQ_ANSWER";
DROP SEQUENCE "SEQ_FAQ";
DROP SEQUENCE "SEQ_CATEGORY";
DROP SEQUENCE "SEQ_PRODUCT";
DROP SEQUENCE "SEQ_REVIEW";
DROP SEQUENCE "SEQ_POINT";
DROP SEQUENCE "SEQ_CART";
DROP SEQUENCE "SEQ_COUPON";
DROP SEQUENCE "SEQ_NOTICE";
DROP SEQUENCE "SEQ_MEMBER";
DROP SEQUENCE "SEQ_ADDRESSBOOK";
DROP SEQUENCE "SEQ_ORDER";
DROP SEQUENCE "SEQ_PAYMENT";
DROP SEQUENCE "SEQ_ASK";
DROP SEQUENCE "SEQ_ADMIN";
DROP SEQUENCE "SEQ_ORDER_DETAIL";


----- CREATE SEQUENCE -----
CREATE SEQUENCE "SEQ_QUESTION" NOCACHE;
CREATE SEQUENCE "SEQ_ANSWER" NOCACHE;
CREATE SEQUENCE "SEQ_FAQ" NOCACHE;
CREATE SEQUENCE "SEQ_CATEGORY" NOCACHE;
CREATE SEQUENCE "SEQ_PRODUCT" NOCACHE;
CREATE SEQUENCE "SEQ_REVIEW" NOCACHE;
CREATE SEQUENCE "SEQ_POINT" NOCACHE;
CREATE SEQUENCE "SEQ_CART" NOCACHE;
CREATE SEQUENCE "SEQ_COUPON" NOCACHE;
CREATE SEQUENCE "SEQ_NOTICE" NOCACHE;
CREATE SEQUENCE "SEQ_MEMBER" NOCACHE;
CREATE SEQUENCE "SEQ_ADDRESSBOOK" NOCACHE;
CREATE SEQUENCE "SEQ_ORDER" NOCACHE;
CREATE SEQUENCE "SEQ_PAYMENT" NOCACHE;
CREATE SEQUENCE "SEQ_ASK" NOCACHE;
CREATE SEQUENCE "SEQ_ADMIN" NOCACHE;
CREATE SEQUENCE "SEQ_ORDER_DETAIL" NOCACHE;


----- DROP TABLE -----
DROP TABLE "ANSWER";
DROP TABLE "QUESTION";
DROP TABLE "FAQ";
DROP TABLE "REVIEW";
DROP TABLE "CART";
DROP TABLE "NOTICE";
DROP TABLE "ADDRESSBOOK";
DROP TABLE "PAYMENT";
DROP TABLE "COUPON";
DROP TABLE "POINT";
DROP TABLE "ASK";
DROP TABLE "ADMIN";
DROP TABLE "ORDER_DETAIL";
DROP TABLE "ORDER";
DROP TABLE "PRODUCT";
DROP TABLE "CATEGORY";
DROP TABLE "MEMBER";

SELECT *
FROM TABS;


----- CREATE TABLE -----
CREATE TABLE "QUESTION"
(
    "NUM"     NUMBER               NOT NULL,
    "TITLE"   VARCHAR2(40)         NOT NULL,
    "WDATE"   DATE DEFAULT SYSDATE NOT NULL,
    "CONTENT" VARCHAR2(40)         NOT NULL,
    "ID"      VARCHAR2(40)         NOT NULL
);

CREATE TABLE "ANSWER"
(
    "NUM"          NUMBER               NOT NULL,
    "CONTENT"      VARCHAR2(40)         NOT NULL,
    "WDATE"        DATE DEFAULT SYSDATE NOT NULL,
    "QUESTION_NUM" NUMBER               NOT NULL
);

CREATE TABLE "FAQ"
(
    "NUM"      NUMBER               NOT NULL,
    "QUESTION" VARCHAR2(40)         NULL,
    "ANSWER"   VARCHAR2(40)         NULL,
    "WRITER"   VARCHAR2(40)         NULL,
    "WDATE"    DATE DEFAULT SYSDATE NOT NULL
);

CREATE TABLE "CATEGORY"
(
    "NUM"           NUMBER        NOT NULL,
    "CATEGORY_NAME" VARCHAR2(100) NOT NULL
);

 CREATE TABLE PRODUCT 
(
  NUM NUMBER NOT NULL 
, CATEGORY_NUM NUMBER NOT NULL 
, PRODUCT_NAME VARCHAR2(200 BYTE) NOT NULL 
, PRODUCT_IMG VARCHAR2(200 BYTE) DEFAULT 'pro_default.png'
, PRODUCT_PRICE NUMBER NOT NULL 
, PRODUCT_STOCK NUMBER DEFAULT 1 NOT NULL 
, PRODUCT_CONTENT VARCHAR2(1000 BYTE) 
, CONSTRAINT PRODUCT_PK PRIMARY KEY 
  (
    NUM 
  )
  ENABLE 
);

  CREATE TABLE REVIEW 
(
  NUM NUMBER NOT NULL 
, PRODUCT_NUM NUMBER NOT NULL 
, MEMBER_ID VARCHAR2(20 BYTE) NOT NULL 
, WDATE DATE DEFAULT sysdate NOT NULL 
, REVIEW_CONTENT VARCHAR2(1000 BYTE) NOT NULL 
, CONSTRAINT REVIEW_PK PRIMARY KEY 
  (
    NUM 
  )
  ENABLE 
) ;

CREATE TABLE "POINT"
(
    "NUM"             NUMBER       NOT NULL,
    "MEMBER_NUM"      NUMBER       NOT NULL,
    "WDATE"           DATE         NOT NULL,
    "POINT_CONTENT"   VARCHAR2(40) NOT NULL,
    "STATE"           VARCHAR2(40) NOT NULL,
    "AMOUNT"          NUMBER       NOT NULL,
    "EXPIRATION_DATE" DATE         NULL
);

CREATE TABLE CART 
(
  NUM NUMBER NOT NULL 
, PRODUCT_NUM NUMBER NOT NULL 
, MEMBER_ID VARCHAR2(20 BYTE) 
, AMOUNT NUMBER NOT NULL 
, CONSTRAINT CART_PK PRIMARY KEY 
  (
    NUM 
  )
  ENABLE 
);

CREATE TABLE "COUPON"
(
    "NUM"            NUMBER        NOT NULL,
    "NUM_MEMBER"     NUMBER        NOT NULL,
    "COUPON_NAME"    VARCHAR2(100) NOT NULL,
    "DISCOUNT_PRICE" NUMBER        NOT NULL,
    "COUPON_EDATE"   DATE          NOT NULL,
    "COUPON_IMG"     VARCHAR2(100) NOT NULL
);

CREATE TABLE "NOTICE"
(
    "NUM"        NUMBER               NOT NULL,
    "MEMBER_NUM" NUMBER               NOT NULL,
    "TITLE"      VARCHAR2(40)         NOT NULL,
    "CONTENT"    VARCHAR2(40)         NOT NULL,
    "DATE"       DATE DEFAULT SYSDATE NOT NULL
);

CREATE TABLE "MEMBER"
(
    "NUM"              NUMBER               NOT NULL,
    "MEMBER_ID"        VARCHAR2(20)         NULL,
    "MEMBER_PW"        VARCHAR2(20)         NOT NULL,
    "MEMBER_NAME"      VARCHAR2(20)         NOT NULL,
    "MEMBER_EMAIL"     VARCHAR2(40)         NOT NULL,
    "MEMBER_ZIPCODE"   VARCHAR2(10)         NULL,
    "MEMBER_ADDRESS1"  VARCHAR2(100)        NULL,
    "MEMBER_ADDRESS2" VARCHAR2(100)        NULL,
    "MEMBER_TEL"       VARCHAR2(20)         NULL,
    "MEMBER_USERYN"    DATE DEFAULT NULL    NULL,
    "MEMBER_REGDATE"   DATE DEFAULT SYSDATE NULL,
    "MEMBER_NICKNAME"  VARCHAR2(20)         NULL,
    "MEMBER_PROFILE"   VARCHAR2(20) DEFAULT 'default.png' NULL
);

CREATE TABLE "ADDRESSBOOK"
(
    "NUM"         NUMBER           NOT NULL,
    "MEMBER_NUM"  NUMBER           NOT NULL,
    "AB_NAME"     VARCHAR2(20)     NULL,
    "AB_ZIPCODE"  VARCHAR2(8)      NULL,
    "AB_ADDRESS1" VARCHAR2(100)    NULL,
    "AB_ADDRESS2" VARCHAR2(100)    NULL,
    "AB_TEL"      VARCHAR2(20)     NULL,
    "AB_BASE"     NUMBER DEFAULT 0 NULL
);

CREATE TABLE "ORDER"
(
    "NUM"          NUMBER                       NOT NULL,
    "MEMBER_NUM"   NUMBER                       NOT NULL,
    "ORDER_DATE"   DATE         DEFAULT SYSDATE NULL,
    "ORDER_STATUS" VARCHAR2(20) DEFAULT '배송준비중' NULL,
    "ORDER_AMOUNT" NUMBER                       NULL,
    "ORDER_DEL"    NUMBER       DEFAULT 3000    NULL,
    "ORDER_TOTAL"  NUMBER                       NULL
);

CREATE TABLE "PAYMENT"
(
    "NUM"        NUMBER               NOT NULL,
    "ORDER_NUM"  NUMBER               NOT NULL,
    "PAY_METHOD" VARCHAR2(20)         NULL,
    "PAY_DATE"   DATE DEFAULT SYSDATE NULL,
    "PAY_AMOUNT" NUMBER               NULL,
    "POINT_NUM"  NUMBER               NOT NULL,
    "COUPON_NUM" NUMBER               NOT NULL
);

CREATE TABLE "ASK"
(
    "NUM"         NUMBER               NOT NULL,
    "PRODUCT_NUM" NUMBER               NOT NULL,
    "MEMBER_NUM"  NUMBER               NOT NULL,
    "WDATE"       DATE DEFAULT SYSDATE NOT NULL,
    "ASK_CONTENT" VARCHAR2(1000)       NOT NULL
);

CREATE TABLE "ADMIN"
(
    "NUM"      VARCHAR(255) NOT NULL,
    "ADMIN_ID" VARCHAR(255) NOT NULL,
    "ADMIN_PW" VARCHAR(255) NOT NULL
);

CREATE TABLE "ORDER_DETAIL"
(
    "NUM"         NUMBER NOT NULL,
    "PRODUCT_NUM" NUMBER NOT NULL,
    "ORDER_NUM"   NUMBER NOT NULL,
    "AMOUNT"      NUMBER NOT NULL,
    "PRICE"       NUMBER NULL
);



----- 제약조건 -----
-- PRIMARY KEY --
ALTER TABLE "QUESTION"
    ADD CONSTRAINT "PK_QUESTION" PRIMARY KEY ("NUM");

ALTER TABLE "ANSWER"
    ADD CONSTRAINT "PK_ANSWER" PRIMARY KEY ("NUM");

ALTER TABLE "FAQ"
    ADD CONSTRAINT "PK_FAQ" PRIMARY KEY ("NUM");

ALTER TABLE "CATEGORY"
    ADD CONSTRAINT "PK_CATEGORY" PRIMARY KEY ("NUM");

ALTER TABLE "PRODUCT"
    ADD CONSTRAINT "PK_PRODUCT" PRIMARY KEY ("NUM");

ALTER TABLE "REVIEW"
    ADD CONSTRAINT "PK_REVIEW" PRIMARY KEY ("NUM");

ALTER TABLE "POINT"
    ADD CONSTRAINT "PK_POINT" PRIMARY KEY ("NUM");

ALTER TABLE "CART"
    ADD CONSTRAINT "PK_CART" PRIMARY KEY ("NUM");

ALTER TABLE "COUPON"
    ADD CONSTRAINT "PK_COUPON" PRIMARY KEY ("NUM");

ALTER TABLE "NOTICE"
    ADD CONSTRAINT "PK_NOTICE" PRIMARY KEY ("NUM");

ALTER TABLE "MEMBER"
    ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY ("NUM");

ALTER TABLE "ADDRESSBOOK"
    ADD CONSTRAINT "PK_ADDRESSBOOK" PRIMARY KEY ("NUM");

ALTER TABLE "ORDER"
    ADD CONSTRAINT "PK_ORDER" PRIMARY KEY ("NUM");

ALTER TABLE "PAYMENT"
    ADD CONSTRAINT "PK_PAYMENT" PRIMARY KEY ("NUM");

ALTER TABLE "ASK"
    ADD CONSTRAINT "PK_ASK" PRIMARY KEY ("NUM");

ALTER TABLE "ADMIN"
    ADD CONSTRAINT "PK_ADMIN" PRIMARY KEY ("NUM");

ALTER TABLE "ORDER_DETAIL"
    ADD CONSTRAINT "PK_ORDER_DETAIL" PRIMARY KEY ("NUM");


-- FOREIGN KEY --
ALTER TABLE "ANSWER"
    ADD CONSTRAINT "FK_QUESTION_TO_ANSWER_1" FOREIGN KEY ("QUESTION_NUM") REFERENCES "QUESTION" ("NUM");

ALTER TABLE "REVIEW"
    ADD CONSTRAINT "FK_PRODUCT_TO_REVIEW_1" FOREIGN KEY ("PRODUCT_NUM") REFERENCES "PRODUCT" ("NUM");

ALTER TABLE "POINT"
    ADD CONSTRAINT "FK_MEMBER_TO_POINT_1" FOREIGN KEY ("MEMBER_NUM") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "CART"
    ADD CONSTRAINT "FK_PRODUCT_TO_CART_1" FOREIGN KEY ("PRODUCT_NUM") REFERENCES "PRODUCT" ("NUM");

ALTER TABLE "CART"
    ADD CONSTRAINT "FK_MEMBER_TO_CART_1" FOREIGN KEY ("MEMBER_NUM") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "COUPON"
    ADD CONSTRAINT "FK_MEMBER_TO_COUPON_1" FOREIGN KEY ("NUM_MEMBER") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "NOTICE"
    ADD CONSTRAINT "FK_MEMBER_TO_NOTICE_1" FOREIGN KEY ("MEMBER_NUM") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "ADDRESSBOOK"
    ADD CONSTRAINT "FK_MEMBER_TO_ADDRESSBOOK_1" FOREIGN KEY ("MEMBER_NUM") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "ORDER"
    ADD CONSTRAINT "FK_MEMBER_TO_ORDER_1" FOREIGN KEY ("MEMBER_NUM") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "PAYMENT"
    ADD CONSTRAINT "FK_ORDER_TO_PAYMENT_1" FOREIGN KEY ("ORDER_NUM") REFERENCES "ORDER" ("NUM");

ALTER TABLE "PAYMENT"
    ADD CONSTRAINT "FK_POINT_TO_PAYMENT_1" FOREIGN KEY ("POINT_NUM") REFERENCES "POINT" ("NUM");

ALTER TABLE "PAYMENT"
    ADD CONSTRAINT "FK_COUPON_TO_PAYMENT_1" FOREIGN KEY ("COUPON_NUM") REFERENCES "COUPON" ("NUM");

ALTER TABLE "ASK"
    ADD CONSTRAINT "FK_PRODUCT_TO_ASK_1" FOREIGN KEY ("PRODUCT_NUM") REFERENCES "PRODUCT" ("NUM");

ALTER TABLE "ASK"
    ADD CONSTRAINT "FK_MEMBER_TO_ASK_1" FOREIGN KEY ("MEMBER_NUM") REFERENCES "MEMBER" ("NUM");

ALTER TABLE "ORDER_DETAIL"
    ADD CONSTRAINT "FK_PRODUCT_TO_ORDER_DETAIL_1" FOREIGN KEY ("PRODUCT_NUM") REFERENCES "PRODUCT" ("NUM");

ALTER TABLE "ORDER_DETAIL"
    ADD CONSTRAINT "FK_ORDER_TO_ORDER_DETAIL_1" FOREIGN KEY ("ORDER_NUM") REFERENCES "ORDER" ("NUM");

ALTER TABLE PRODUCT
ADD CONSTRAINT PRODUCT_FK1 FOREIGN KEY
(
  CATEGORY_NUM 
)
REFERENCES CATEGORY
(
  NUM 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE REVIEW
ADD CONSTRAINT REVIEW_FK1 FOREIGN KEY
(
  PRODUCT_NUM 
)
REFERENCES PRODUCT
(
  NUM 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE CART
ADD CONSTRAINT CART_FK1 FOREIGN KEY
(
  PRODUCT_NUM 
)
REFERENCES PRODUCT
(
  NUM 
)
ON DELETE CASCADE ENABLE;


-- CHECK --
ALTER TABLE "ADDRESSBOOK"
    ADD CONSTRAINT "CHK_ADDRESSBOOK_SBASE" CHECK ("AB_BASE" IN (0, 1));


-- UNIQUE --
ALTER TABLE "MEMBER"
    ADD CONSTRAINT "UK_MEMBER_MEMBER_ID" UNIQUE ("MEMBER_ID");


----- INSERT -----
INSERT INTO member (num, member_id, member_pw, member_name, member_tel, member_email)
VALUES (seq_member.NEXTVAL, 'user001', 'pw001', 'User001', '010-1234-01', 'user001@example.com');

INSERT INTO member (num, member_id, member_pw, member_name, member_tel, member_email)
VALUES (seq_member.NEXTVAL, 'user002', 'pw002', 'User002', '010-1234-02', 'user002@example.com');

INSERT INTO member (num, member_id, member_pw, member_name, member_tel, member_email)
VALUES (seq_member.NEXTVAL, 'user003', 'pw003', 'User003', '010-1234-03', 'user003@example.com');

INSERT INTO member (num, member_id, member_pw, member_name, member_tel, member_email)
VALUES (seq_member.NEXTVAL, 'user004', 'pw004', 'User004', '010-1234-04', 'user004@example.com');

INSERT INTO member (num, member_id, member_pw, member_name, member_tel, member_email)
VALUES (seq_member.NEXTVAL, 'user005', 'pw005', 'User005', '010-1234-05', 'user005@example.com');

INSERT INTO addressbook (num, member_num, AB_NAME, AB_ZIPCODE, AB_ADDRESS1, AB_ADDRESS2, AB_TEL)
VALUES (seq_addressbook.NEXTVAL, 1, 'kim1', '13612', '경기도 성남시 분당구 내정로 27-1', '구두수선대', '010-111-2222');

INSERT INTO addressbook (num, member_num, AB_NAME, AB_ZIPCODE, AB_ADDRESS1, AB_ADDRESS2, AB_TEL)
VALUES (seq_addressbook.NEXTVAL, 1, 'kim2', '13612', '경기도 성남시 분당구 내정로 29', '금곡프라자', '010-111-2222');

INSERT INTO addressbook (num, member_num, AB_NAME, AB_ZIPCODE, AB_ADDRESS1, AB_ADDRESS2, AB_TEL)
VALUES (seq_addressbook.NEXTVAL, 2, 'lee1', '13602', '경기도 성남시 분당구 내정로 24', '정든마을한진6단지', '010-111-2222');

INSERT INTO addressbook (num, member_num, AB_NAME, AB_ZIPCODE, AB_ADDRESS1, AB_ADDRESS2, AB_TEL)
VALUES (seq_addressbook.NEXTVAL, 2, 'lee2', '13602', '경기도 성남시 분당구 내정로 20', '탄천초등학교', '010-222-3333');

INSERT INTO addressbook (num, member_num, AB_NAME, AB_ZIPCODE, AB_ADDRESS1, AB_ADDRESS2, AB_TEL)
VALUES (seq_addressbook.NEXTVAL, 2, 'lee3', '13602', '경기도 성남시 분당구 내정로 10', '정든마을한진7단지', '010-333-4444');


------------
INSERT INTO CATEGORY (NUM, CATEGORY_NAME)
VALUES (SEQ_CATEGORY.NEXTVAL,'볶음반찬');

INSERT INTO CATEGORY (NUM, CATEGORY_NAME)
VALUES (SEQ_CATEGORY.NEXTVAL,'고기반찬');

INSERT INTO CATEGORY (NUM, CATEGORY_NAME)
VALUES (SEQ_CATEGORY.NEXTVAL,'국·탕·찌개');

INSERT INTO CATEGORY (NUM, CATEGORY_NAME)
VALUES (SEQ_CATEGORY.NEXTVAL,'조림');

INSERT INTO CATEGORY (NUM, CATEGORY_NAME)
VALUES (SEQ_CATEGORY.NEXTVAL,'나물·무침');

INSERT INTO CATEGORY (NUM, CATEGORY_NAME)
VALUES (SEQ_CATEGORY.NEXTVAL,'김치');


------------
INSERT INTO
product(num,category_num,product_name,product_price,product_stock,product_content)
values(seq_product.nextval,2,'떡갈비',13000,100,'맛있는 떡갈비입니다');


------------
INSERT INTO REVIEW(NUM,PRODUCT_NUM,MEMBER_ID,REVIEW_CONTENT)
VALUES (SEQ_REVIEW.NEXTVAL,1,'user001','감자볶음 맛있어요');


-----------
insert into review(num,product_num,member_id,review_content) 
values(seq_review.nextval,1, 'user001','맛있어요');

insert into review(num,product_num,member_id,review_content) 
values(seq_review.nextval,1, 'user002','1인가구가 먹기 적당해요');

