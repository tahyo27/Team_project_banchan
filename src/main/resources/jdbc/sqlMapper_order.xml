<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.banchan.order">
	<select id="selectAll" resultType="com.banchan.order.model.OrderVO">
		select * from "ORDER"
	</select>

	<select id="selectOne" resultType="com.banchan.order.model.OrderVO">
		select * from "ORDER" where NUM = #{num}
	</select>

	<update id="update" parameterType="com.banchan.order.model.OrderVO">
		update "ORDER"
		set ORDER_STATUS = #{orderStatus}, ORDER_AMOUNT = #{orderAmount}, ORDER_DEL = #{orderDel}, ORDER_TOTAL = #{orderTotal}
		where NUM = #{num}
	</update>

	<delete id="delete" parameterType="com.banchan.order.model.OrderVO">
		delete from "ORDER" where NUM = #{num}
	</delete>

	<insert id="insertOrder" parameterType="com.banchan.order.model.OrderVO">
		<selectKey keyProperty="num" resultType="int" order="BEFORE">
			select SEQ_ORDER.NEXTVAL from DUAL
		</selectKey>
		insert into "ORDER" (NUM, MEMBER_NUM, RECEIVER_NAME, TEL, ZIPCODE, ADDRESS1, ADDRESS2, MEMO, ORDER_PRICE, DELIVERY_FEE, DISCOUNT_COUPON, USE_POINT, TOTAL_PRICE)
		values (#{num}, #{member_num}, #{receiver_name}, #{tel}, #{zipcode}, #{address1}, #{address2}, #{memo}, #{order_price}, #{delivery_fee}, #{discount_coupon}, #{use_point}, #{total_price})
	</insert>

	<insert id="insertOrderDetail" parameterType="com.banchan.order.model.OrderVO">
		insert into ORDER_DETAIL (NUM, PRODUCT_NUM, ORDER_NUM, AMOUNT, PRICE)
		select SEQ_ORDER_DETAIL.NEXTVAL, A.*
		from (
			<foreach item="detail" collection="details" separator="union all ">
				select #{detail.product_num} as PRODUCT_NUM, #{num} as ORDER_NUM, #{detail.amount} as AMOUNT, #{detail.price} as PRICE
				from DUAL
			</foreach>
		) A
	</insert>

	<select id="selectOrderDetail" resultType="com.banchan.order.model.OrderDetailVO">
		select O.NUM, O.ORDER_NUM, O.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_IMG, O.AMOUNT, O.PRICE
		from ORDER_DETAIL O join PRODUCT P on O.PRODUCT_NUM = P.NUM
		where O.ORDER_NUM = #{num}
	</select>
	
	<select id="selectOrderList" parameterType="com.banchan.order.model.SearchOrderVO" resultType="com.banchan.order.model.OrderVO">
		select *
		from "ORDER" o
				join (select ORDER_NUM,
							PRODUCT_NUM,
							count(NUM) over (partition by ORDER_NUM)                count,
							row_number() over (partition by ORDER_NUM order by NUM) rn
					from ORDER_DETAIL) OD on o.NUM = OD.ORDER_NUM and od.rn = 1
				join PRODUCT p on od.PRODUCT_NUM = p.NUM
				join MEMBER m on o.MEMBER_NUM = m.NUM
		where 1 = 1
		<if test="member_num != null and member_num != ''">
			and o.MEMBER_NUM = #{member_num}
		</if>
		<if test="start_date != null and end_date != null">
			and o.ORDER_DATE BETWEEN TO_DATE(#{start_date}, 'YYYY-MM-DD') AND TO_DATE(#{end_date}, 'YYYY-MM-DD') + 0.99999
		</if>
		<if test="status != null and status != ''">
			and o.STATUS = #{status}
		</if>
	</select>

	<select id="getOrderCount" parameterType="com.banchan.order.model.SearchOrderVO" resultType="int">
		select count(o.NUM)
		from "ORDER" o
		where 1 = 1
		<if test="member_num != null and member_num != ''">
			and o.MEMBER_NUM = #{member_num}
		</if>
		<if test="start_date != null and end_date != null">
			and o.ORDER_DATE BETWEEN TO_DATE(#{start_date}, 'YYYY-MM-DD') AND TO_DATE(#{end_date}, 'YYYY-MM-DD') + 0.99999
		</if>
		<if test="status != null and status != ''">
			and o.STATUS = #{status}
		</if>
	</select>

	<update id="updateStatus" parameterType="com.banchan.order.model.OrderVO">
		update "ORDER"
		set STATUS = #{status}
		where NUM = #{num}
	</update>
</mapper>